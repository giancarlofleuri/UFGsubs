1
00:00:00,000 --> 00:00:05,000
Ele gosta muito de brincar com os bytes(escovar)

2
00:00:05,000 --> 00:00:07,000
Quando há um maior esforço...

3
00:00:07,000 --> 00:00:09,000
Outra coisa legal?

4
00:00:09,000 --> 00:00:13,000
(???)

5
00:00:13,000 --> 00:00:15,000
Logo, é algo de qualidade

6
00:00:15,000 --> 00:00:17,000
E ele sabe sobre isso

7
00:00:17,290 --> 00:00:19,000
(Aluno faz uma pergunta e o prof. não entende)

8
00:00:19,000 --> 00:00:21,000
- Ele sabe muito sobre outras coisas também...?

9
00:00:21,000 --> 00:00:23,000
Sim, ele sabe sobre várias coisas

10
00:00:23,000 --> 00:00:25,000
(???)

11
00:00:25,000 --> 00:00:27,000
(cof cof)

12
00:00:27,000 --> 00:00:29,000
Então...

13
00:00:29,000 --> 00:00:31,000
Padrões de projeto...

14
00:00:31,000 --> 00:00:33,000
O livro 'Padrões de projeto' foi lançado

15
00:00:33,000 --> 00:00:35,000
Em torno de 20 anos atrás

16
00:00:35,360 --> 00:00:37,000
A primeira versão

17
00:00:37,000 --> 00:00:39,000
Foi ao mesmo tempo

18
00:00:39,000 --> 00:00:41,000
Impressa duas vezes

19
00:00:41,000 --> 00:00:43,000
A primeira foi em Setembro

20
00:00:43,000 --> 00:00:45,000
E os livros foram lançados em outubro

21
00:00:45,000 --> 00:00:47,000
Logo, a edição do evento foi lançada

22
00:00:47,000 --> 00:00:49,000
Um mês antes

23
00:00:49,000 --> 00:00:51,000
O 'Padrões de projeto'

24
00:00:53,300 --> 00:00:55,300
Eles compraram 'Padrões de projetos'

25
00:01:01,300 --> 00:01:03,300
Cópias impressas

26
00:01:03,300 --> 00:01:05,300
Que nós mesmos imprimimos

27
00:01:05,300 --> 00:01:07,300
Pois nós não tínhamos uma editora ainda

28
00:01:09,300 --> 00:01:11,300
Há uma ??? sobre o ano

29
00:01:13,300 --> 00:01:15,300
Ele organizou isso

30
00:01:15,300 --> 00:01:17,300
Ele estava tentando fazer com que as pessoas ficassem mais animadas

31
00:01:17,300 --> 00:01:19,300
sobre padrões. Ele queria que os padrões se tornassem

32
00:01:19,300 --> 00:01:21,300
um grande movimento

33
00:01:21,300 --> 00:01:23,300
que mudaria as ideias da ciência da computação

34
00:01:23,300 --> 00:01:25,300
??? sobre isso

35
00:01:27,300 --> 00:01:29,300
naquela época

36
00:01:29,300 --> 00:01:31,300
Nós já estávamos trabalhando

37
00:01:31,300 --> 00:01:33,300
no livro

38
00:01:33,300 --> 00:01:35,300
???

39
00:01:35,300 --> 00:01:37,300
As pessoas queriam padronizar

40
00:01:39,300 --> 00:01:41,300
sobre padrões

41
00:01:41,300 --> 00:01:43,300
??? foi quem disse

42
00:01:43,300 --> 00:01:45,300
'Eu irei escrever, mas onde irei publica-lo?'

43
00:01:45,300 --> 00:01:47,300
'Não há lugar pra publicar'...então dizemos:

44
00:01:47,300 --> 00:01:49,300
'UMA CONFERÊNCIA!'

45
00:01:49,300 --> 00:01:51,300
Essa foi

46
00:01:51,300 --> 00:01:53,300
Nós deveríamos fazer uma conferência

47
00:01:53,300 --> 00:01:55,300
Essa foi a motivação pra começar

48
00:01:55,300 --> 00:01:57,300
a publicação

49
00:01:57,300 --> 00:01:59,300
Existe uma conexão historicamente forte

50
00:01:59,300 --> 00:02:01,300
porquê o livro foi lançado

51
00:02:01,300 --> 00:02:03,300
com muito sucesso, e por causa disso

52
00:02:03,300 --> 00:02:05,300
eles atraíram muitas pessoas

53
00:02:05,300 --> 00:02:07,300
para essas conferências

54
00:02:07,300 --> 00:02:09,300
??? publicação...Então éssa é uma conexão

55
00:02:09,300 --> 00:02:11,300
muito forte

56
00:02:11,300 --> 00:02:13,300
entre padrões de projeto e

57
00:02:13,300 --> 00:02:15,300
o livro

58
00:02:15,300 --> 00:02:17,300
Dizer que um deles levou ao outro

59
00:02:17,300 --> 00:02:19,300
não é verdade, pois eles têm

60
00:02:19,300 --> 00:02:21,300
similiaridade em algumas coisas

61
00:02:21,300 --> 00:02:23,300
ambos

62
00:02:23,300 --> 00:02:25,300
e isso acontece

63
00:02:25,300 --> 00:02:27,300
O livro diz ...

64
00:02:27,300 --> 00:02:29,300
'lançado em 1995...'

65
00:02:29,300 --> 00:02:31,300
E eu aprendi

66
00:02:31,300 --> 00:02:33,300
que amadores gostam de colocar, na verdade

67
00:02:33,300 --> 00:02:35,300
datas posteriores à data em que

68
00:02:35,300 --> 00:02:37,300
o livro realmente foi lançado

69
00:02:37,300 --> 00:02:39,300
Pois por motivos técnicos

70
00:02:39,300 --> 00:02:41,300
???isso garante

71
00:02:41,300 --> 00:02:43,300
que um livro seja novo e relevante.

72
00:02:43,300 --> 00:02:45,300
E adicionando aquela data posterior

73
00:02:45,300 --> 00:02:47,300
com um ano a mais de 'bônus'

74
00:02:47,300 --> 00:02:49,300
irá vender mais

75
00:02:49,300 --> 00:02:51,300
Claro, que para este livro isso é completamente irrelevante

76
00:02:51,300 --> 00:02:53,300
porquê 20 anos depois ele continua sendo vendido.

77
00:02:53,300 --> 00:02:55,300
E isso geralmente ocorre por 2 ou 3 anos

78
00:02:55,300 --> 00:02:57,300
no caso de um livro técnico.

79
00:02:57,300 --> 00:02:59,300
E este foi o meu primeiro

80
00:02:59,300 --> 00:03:01,300
livro, algo completamente

81
00:03:01,300 --> 00:03:03,300
inusitado, atípico

82
00:03:03,300 --> 00:03:05,300
pois não é assim que livros técnicos funcionam.

83
00:03:07,300 --> 00:03:09,300
???... O livro é um

84
00:03:09,300 --> 00:03:11,300
do pior

85
00:03:11,300 --> 00:03:13,300
Alguém tem que fazer

86
00:03:15,300 --> 00:03:17,300
pra mim, quando o prêmio de linguagens de programação

87
00:03:17,300 --> 00:03:19,300
eram

88
00:03:19,300 --> 00:03:21,300
mas quando eu

89
00:03:21,300 --> 00:03:23,300
porquê não é

90
00:03:23,300 --> 00:03:25,300
um livro sobre linguagens de programação

91
00:03:25,300 --> 00:03:27,300
e é um livro sobre programação

92
00:03:27,300 --> 00:03:29,300
é um livro sobre ???

93
00:03:29,300 --> 00:03:31,300
programação, mas não de uma perspectiva

94
00:03:31,300 --> 00:03:33,300
da criação de linguagens de programação

95
00:03:33,300 --> 00:03:35,300
e sim a perspectiva de desenho

96
00:03:35,300 --> 00:03:37,300
mas

97
00:03:37,300 --> 00:03:39,300
o tipo de coisa

98
00:03:39,300 --> 00:03:41,300
por que eles fariam isso?

99
00:03:41,300 --> 00:03:43,300
???

100
00:03:43,300 --> 00:03:45,300
??? ou antes e eles geralmente

101
00:03:53,300 --> 00:03:55,300
SIGPLAN

102
00:03:57,300 --> 00:03:59,300
sobre linguagens de programação

103
00:03:59,300 --> 00:04:01,300
Então eles não estão fazendo pra essa conferência

104
00:04:01,300 --> 00:04:08,600
mas pensaram: 'Qual é a maior... Conferência que SIGPLAN

105
00:04:08,600 --> 00:04:10,600
Honoriza?'

106
00:04:10,600 --> 00:04:12,600
???

107
00:04:12,600 --> 00:04:14,600
em torno de 20 conferências

108
00:04:14,600 --> 00:04:16,600
em que algumas delas

109
00:04:16,600 --> 00:04:18,600
eram sobre linguagens de programação ou não

110
00:04:18,600 --> 00:04:20,600
e fomos parar em uma conferÇencia engraçada

111
00:04:20,600 --> 00:04:22,600
sobre 'o que

112
00:04:22,600 --> 00:04:24,600
Na verdade não...

113
00:04:24,600 --> 00:04:26,600
eles estavam

114
00:04:26,600 --> 00:04:28,600
fazendo um tipo de feira

115
00:04:38,600 --> 00:04:40,600
e...

116
00:04:40,600 --> 00:04:42,600
tem uma

117
00:04:42,600 --> 00:04:46,600
...

118
00:04:46,600 --> 00:04:48,600
(barulho)

119
00:04:48,600 --> 00:04:50,600
(

120
00:14:20,600 --> 00:14:22,600
ok, então

121
00:14:22,600 --> 00:14:24,600
O Livro...

122
00:14:24,600 --> 00:14:26,600
Padrões de projeto

123
00:14:26,600 --> 00:14:28,600
Nós falamos sobre fazer uma linguagem padrão

124
00:14:28,600 --> 00:14:30,600
Não é uma linguagem padrão, nós não

125
00:14:30,600 --> 00:14:32,600
tentamos criar uma linguagem padrão

126
00:14:32,600 --> 00:14:34,600
nós não tínhamos ideia de como fazer isso, então

127
00:14:34,600 --> 00:14:36,600
nós tentamos fazer o que nós sabíamos como fazer

128
00:14:36,600 --> 00:14:38,600
Nós estávamos tentando selecionar padrões

129
00:14:38,600 --> 00:14:40,600
que nós achávamos que eram típicas o

130
00:14:40,600 --> 00:14:42,600
de programação orientada à objeto. Quando escrevemos

131
00:14:42,600 --> 00:14:44,600
nós descobrimos que

132
00:14:44,600 --> 00:14:46,600
que todo mundo que fosse um expert em

133
00:14:46,600 --> 00:14:48,600
POO iria ler nosso livro

134
00:14:48,600 --> 00:14:50,600
e dizer: 'Sim, isso é um padrão'

135
00:14:50,600 --> 00:14:52,600
'Isso é um padrão', 'Isso é um padrão'.

136
00:14:52,600 --> 00:14:54,600
Logo, poderiam dizer: 'Eu não aprendi nada lendo

137
00:14:54,600 --> 00:14:56,600
este livro. É tudo que eu já sei'.

138
00:14:56,600 --> 00:14:58,600
Mas, o nosso público algo

139
00:14:58,600 --> 00:15:00,600
eram aqueles que

140
00:15:00,600 --> 00:15:02,600
promagramando em C++

141
00:15:02,600 --> 00:15:04,600
por mais de dois anos

142
00:15:04,600 --> 00:15:06,600
e descobriram que eles não eram muito bons

143
00:15:06,600 --> 00:15:08,600
em programação orientada a objeto

144
00:15:08,600 --> 00:15:10,600
E havia muita gente,

145
00:15:10,600 --> 00:15:12,600
nessa situação.

146
00:15:12,600 --> 00:15:14,600
Eles queriam

147
00:15:14,600 --> 00:15:16,600
aprender essas técnicas.

148
00:15:16,600 --> 00:15:18,600
então estávamos tentando colocar tudo junto

149
00:15:18,600 --> 00:15:20,600
de forma que as pessoas pudessem aprender

150
00:15:20,600 --> 00:15:22,600
A parte chave

151
00:15:22,600 --> 00:15:24,600
...o propósito

152
00:15:24,600 --> 00:15:26,600
do livro era fornecer

153
00:15:26,600 --> 00:15:28,600
um 'vocabulário de desenhos'

154
00:15:28,600 --> 00:15:30,600
os nomes dos padrões

155
00:15:30,600 --> 00:15:32,600
era esse vocabulário

156
00:15:32,600 --> 00:15:34,600
eles são os nomes para

157
00:15:34,600 --> 00:15:36,600
falar sobre os seus desenhos

158
00:15:36,600 --> 00:15:38,600
e eles deveriam

159
00:15:38,600 --> 00:15:40,600
encontrar uma forma

160
00:15:40,600 --> 00:15:42,600
de aprender todos

161
00:15:42,600 --> 00:15:44,600
um por vez, lendo suas técnicas

162
00:15:44,600 --> 00:15:46,600
e então

163
00:15:46,600 --> 00:15:48,600
nós conversamos com outras pessoas

164
00:15:48,600 --> 00:15:50,600
sobre a descrição dos desenhos

165
00:15:50,600 --> 00:15:52,600
em termos de

166
00:15:52,600 --> 00:15:54,600
dos padrões usados

167
00:15:54,600 --> 00:15:56,600
eram eficientes e

168
00:15:56,600 --> 00:15:58,600
possuiam padrões para cada técnica

169
00:16:00,600 --> 00:16:02,600
conversamos sobre os processos

170
00:16:02,600 --> 00:16:04,600
individuais

171
00:16:04,600 --> 00:16:06,600
e também como isso ajudariam a desenhar, pois quando

172
00:16:06,600 --> 00:16:08,600
você vai desenhar, frequentemente fica 'travado'

173
00:16:08,600 --> 00:16:10,600
voce não tem muita certeza do que fazer

174
00:16:10,600 --> 00:16:12,600
e seria legal se tivesse algumas alternativas

175
00:16:12,600 --> 00:16:14,600
'Desse jeito', 'Daquele' ou 'deste aqui'

176
00:16:14,600 --> 00:16:16,600
Então eu preparei

177
00:16:18,600 --> 00:16:20,600
E se eu usar este padrão? e aquele?

178
00:16:20,600 --> 00:16:22,600
...

179
00:16:22,600 --> 00:16:24,600
diria:

180
00:16:24,600 --> 00:16:26,600
Isso seria ruim

181
00:16:26,600 --> 00:16:28,600
E sobre isso?

182
00:16:28,600 --> 00:16:30,600
Sim, este parece bom'

183
00:16:30,600 --> 00:16:32,600
Para ter uma ideia

184
00:16:32,600 --> 00:16:34,600
que se você tentar as coisas

185
00:16:34,600 --> 00:16:38,600
é possível para desenho

186
00:16:38,600 --> 00:16:42,600
Quando nós escrevemos

187
00:16:42,600 --> 00:16:46,600
o livro, nós tínhamos 23 padrões

188
00:16:46,600 --> 00:16:50,600
e nós decidimos que seriam estes.

189
00:16:54,600 --> 00:16:58,600
nós tentamos organizar com 6 categorias diferentes

190
00:16:58,600 --> 00:17:02,600
e tentamos organizar baseado nestas categorias

191
00:17:02,600 --> 00:17:06,600
, tentando ser lógico com estas categorias

192
00:17:06,600 --> 00:17:10,600
Eventualmente chegamos a 3 categorias, e essas categorias

193
00:17:10,600 --> 00:17:14,600
que estavam no livro são as relacionadas a criação e comportamento

194
00:17:14,600 --> 00:17:18,100
e de padrão estrutura

195
00:17:18,100 --> 00:17:21,600
E muitas pessoas acham que há algo mágico

196
00:17:21,600 --> 00:17:25,100
sobre a categorização, mas não há. 23 eram demais

197
00:17:25,100 --> 00:17:28,600
E tínhamos que diminuir

198
00:17:28,600 --> 00:17:32,100
paras sessões menores. 7 por exemplo é um bom número

199
00:17:32,100 --> 00:17:35,600
mas não dividiria tão legal para 23 padrões.

200
00:17:35,600 --> 00:17:39,100
Voltando à criação, os padrões criacionais que nós

201
00:17:39,100 --> 00:17:42,600
selecionamos, eu poderia dizer o que era criacional ou não

202
00:17:42,600 --> 00:17:46,100
O comportamental e estrutural não são

203
00:17:46,100 --> 00:17:49,600
não são categorizados muito bem, pois uma quantidade de padrões

204
00:17:49,600 --> 00:17:53,100
poderiam ser estruturais, eles não são estrututurais, onde eu deveria colocar isso e aquilo...'

205
00:17:53,100 --> 00:17:56,600
ou daquele jeito

206
00:17:56,600 --> 00:18:00,100
Não são categorias muito boas em termos de

207
00:18:00,100 --> 00:18:03,600
estar apto de lembrar

208
00:18:03,600 --> 00:18:07,100
Então tentamos colcar uma maneira melhor de fazer isso

209
00:18:07,100 --> 00:18:10,600
e uma das coisas que fizemos juntos

210
00:18:10,600 --> 00:18:14,100
...estou tentando lembrar quando foi...

211
00:18:14,100 --> 00:18:17,600
algo em torno de 8 anos atrás quando Jhon

212
00:18:17,600 --> 00:18:21,100
morreu

213
00:18:21,100 --> 00:18:24,600
cancer?

214
00:18:24,600 --> 00:18:28,100
organizou essa reunião, pois

215
00:18:28,100 --> 00:18:31,600
nós estávamos otimistas, pois estaríamos possibilitados

216
00:18:31,600 --> 00:18:35,100
de continuar fazendo, ele organizou pra todos virem

217
00:18:35,100 --> 00:18:38,600
E todos fomos a Nova Iorque

218
00:18:38,600 --> 00:18:42,100
E quando chegamos lá ele estava muito doente

219
00:18:42,100 --> 00:18:45,600
ele estava no hospital e sequer poderia ???, então fomos a este encontro

220
00:18:45,600 --> 00:18:49,100
falando sobre o que a próxima edição do livro

221
00:18:49,100 --> 00:18:52,600
como isso deveria mudar? E uma das coisas que concordamos

222
00:18:52,600 --> 00:18:56,100
é que essas 3 categorias não eram úteis

223
00:18:56,100 --> 00:18:59,600
para ensinar, lembrar, nós estamos ajudando

224
00:18:59,600 --> 00:19:03,100
as pessoas a encontrar os padrões e a colocá-los, mas quando você lê

225
00:19:03,100 --> 00:19:06,600
??? você verá várias pessoas tentando categorizar

226
00:19:06,600 --> 00:19:10,100
os padrões em apenas 3 categorias, o que é bobo

227
00:19:10,100 --> 00:19:13,600
pois estas não são boas categorias. Mas o que são boas categorias?

228
00:19:13,600 --> 00:19:17,100
Bem, o que pensamos é que para ensinar

229
00:19:17,100 --> 00:19:20,600
as pessoas sempre querem saber: 'quais são os padrões importantes'?

230
00:19:20,600 --> 00:19:24,100
'Quais não são tão importantes?'. E então decidimos que

231
00:19:24,100 --> 00:19:27,600
se chamariam 'padrões principais' que nós poderíamos

232
00:19:27,600 --> 00:19:31,100
ter uma ideia de que estes seriam os mais importantes

233
00:19:31,100 --> 00:19:34,600
e os que não eram tão importantes.

234
00:19:34,600 --> 00:19:38,100
E então nós decidimos adicionar os 'padrões principais'

235
00:19:38,100 --> 00:19:41,600
que achamos que fosse importante.

236
00:19:41,600 --> 00:19:45,100
Os que estão em face normal estão no livro

237
00:19:45,100 --> 00:19:48,600
Como 'Value object' e 'null object' estão em itálico

238
00:19:48,600 --> 00:19:52,100
Estes são os que

239
00:19:52,100 --> 00:19:55,600
estavam presentes nas primeiras edições.

240
00:19:55,600 --> 00:19:59,100
Um 'objeto de valor'...

241
00:19:59,100 --> 00:20:02,600
é um padrão engraçado. Eu consigo lembrar

242
00:20:02,600 --> 00:20:06,100
os 4 padrões de desenho que foram lançados

243
00:20:06,100 --> 00:20:09,600
e várias pessoas tentaram escrever

244
00:20:09,600 --> 00:20:13,100
e diriam 'isso não está certo'

245
00:20:13,100 --> 00:20:16,600
'Estamos perdendo alguma coisa'

246
00:20:16,600 --> 00:20:20,100
As pessoas falaram sobre

247
00:20:20,100 --> 00:20:23,600
este padrão e por um longo tempo

248
00:20:23,600 --> 00:20:27,100
livro do (nome não captado) foi o primeiro

249
00:20:27,100 --> 00:20:30,600
a ter uma boa descrição de um 'value object'.

250
00:20:30,600 --> 00:20:34,100
Então...

251
00:20:34,100 --> 00:20:37,600
Eu gostaria de escrever minha própria versão

252
00:20:37,600 --> 00:20:41,100
de value object, e agora que eu aprendi com (autor desconhecido) eu irei fazer (risos)

253
00:20:44,600 --> 00:20:48,100
deveriam estar no livro pois é um padrão chave.

254
00:20:48,100 --> 00:20:51,600
Um exemplo de um doa meus padrões favoritos

255
00:20:51,600 --> 00:20:55,100
e mais importantes

256
00:20:55,100 --> 00:20:58,600
em uso e meu favorito

257
00:20:58,600 --> 00:21:02,100
é o padrão 'Composite'

258
00:21:02,100 --> 00:21:05,600
E isso é porquê quando eu estou desenhando um sistema, e eu posso perceber como

259
00:21:05,600 --> 00:21:09,100
aplicar o padrão Composite nele.

260
00:21:09,100 --> 00:21:12,600
E então o desenho torna-se muito mais complexo

261
00:21:12,600 --> 00:21:16,100
Eu posso estender bem mais

262
00:21:16,100 --> 00:21:19,600
facilmente e não há uma verdadeira razão do porquê

263
00:21:19,600 --> 00:21:23,100
deve ser este padrão, é só por que isso aconteceu várias vezes em que eu estava desenhando sistemas

264
00:21:23,100 --> 00:21:26,600
na época que eu percebi como o padrão composite

265
00:21:26,600 --> 00:21:30,100
poderia ser mais eficiente e bem sucedido

266
00:21:30,100 --> 00:21:33,600
talvez seja uma superstição ou acidente

267
00:21:37,100 --> 00:21:40,600
era apenas uma boa impressão sobre composite

268
00:21:40,600 --> 00:21:44,100
quantas pessoas

269
00:21:44,100 --> 00:21:47,600
pensam que conhecem o padrão Composite?

270
00:21:47,600 --> 00:21:51,100
Aparentemente mais da metade não conhece, isso

271
00:21:51,100 --> 00:21:54,600
é interessante. O padrão composite é

272
00:21:58,100 --> 00:22:01,600
um desenho lógico e

273
00:22:01,600 --> 00:22:05,100
você tem objetos complicados

274
00:22:05,100 --> 00:22:08,600
partes do objeto

275
00:22:08,600 --> 00:22:12,100
e nós temos árvores de objetos

276
00:22:15,600 --> 00:22:19,100
você tem um simples nós, mas pode ter uma

277
00:22:19,100 --> 00:22:22,600
pense em algo como

278
00:22:22,600 --> 00:22:26,100
um som abstrato e um nó como seu som, e o acorde

279
00:22:26,100 --> 00:22:29,600
como uma sequência de nós

280
00:22:29,600 --> 00:22:33,100
é o som

281
00:22:33,100 --> 00:22:36,600
A sequência é o núcleo do composite, pois você define

282
00:22:36,600 --> 00:22:40,100
a sequência ou o núcleo

283
00:22:40,100 --> 00:22:43,600
para sons menores.

284
00:22:43,600 --> 00:22:47,100
Composer é uma ideia geral de

285
00:22:47,100 --> 00:22:50,600
e funciona em coisas diferentes.

286
00:22:50,600 --> 00:22:54,100
E quando você tenta modelar isso em POO,

287
00:22:54,100 --> 00:22:57,600
uma maneira clássica de fazer isso é dizer: 'eu tenho esse componente

288
00:22:57,600 --> 00:23:01,100
som e talvez tenha um filho(children)

289
00:23:01,100 --> 00:23:04,600
ou talvez tenha outros componentes

290
00:23:11,600 --> 00:23:15,100
pois outros componentes estão relacionados a eles

291
00:23:15,100 --> 00:23:18,600
aos filhos, podendo ser de zero pra muitos

292
00:23:18,600 --> 00:23:22,100
um componente pode ter de zero pra muitos

293
00:23:22,100 --> 00:23:25,600
outros componentes. Isso é imaginando

294
00:23:25,600 --> 00:23:29,100
a leitura de um livro. E um livro pode ser feito de capítulos.

295
00:23:29,100 --> 00:23:32,600
E capítulos são feitos de seções

296
00:23:32,600 --> 00:23:36,100
que são feitos de sub-seções, parágrafos e figuras

297
00:23:36,100 --> 00:23:39,600
e todas essas são como partes do livro

298
00:23:39,600 --> 00:23:42,290
imagine desta forma

299
00:23:45,790 --> 00:23:49,290
Isso não é bem 'Composite'

300
00:23:49,290 --> 00:23:52,790
Isso não é o que o livro diz que pode ser um 'component'

301
00:23:52,790 --> 00:23:56,290
pois o problema com isso é que

302
00:23:56,290 --> 00:23:59,790
a versão de 'composite' do livro

303
00:23:59,790 --> 00:24:03,290
diz é que um destes componentes

304
00:24:03,290 --> 00:24:06,790
será o menos entre eles

305
00:24:06,790 --> 00:24:10,290
algum precisa ser o menor. Talvez eu diga que parágrafo é o menor

306
00:24:10,290 --> 00:24:13,790
ou seções podem ser menores

307
00:24:13,790 --> 00:24:17,290
posi são feitas de palavras, então palavras são as menores pois são feitas de caracteres

308
00:24:17,290 --> 00:24:20,790
Logo, alguma coisa tem que ser menor

309
00:24:20,790 --> 00:24:24,290
algo precisa ser menor e quando você tá desenhando

310
00:24:24,290 --> 00:24:27,790
você precisa escolher, talvez diga que parágrafo

311
00:24:27,790 --> 00:24:31,290
é o menor e tem uma string como seu conteúdo

312
00:24:31,290 --> 00:24:34,790
mas uma string não é um componente

313
00:24:34,790 --> 00:24:38,290
pois se a linguagem de programação for JAVA, a string já está na linguagem

314
00:24:38,290 --> 00:24:41,790
e uma string na linguagem não é um componente

315
00:24:41,790 --> 00:24:45,290
Fica a seu critério como programador, mas alguma coisa

316
00:24:45,290 --> 00:24:48,790
tem que ser menor. E qualquer que seja o menor

317
00:24:48,790 --> 00:24:52,290
poderá não ter outro componente. E quando você trabalha com

318
00:24:52,290 --> 00:24:55,790
uma biblioteca faz isso deste jeito, você irá...

319
00:24:55,790 --> 00:24:59,290
eu garanto, tenho certeza

320
00:24:59,290 --> 00:25:02,790
você irá definir uma coisa menor que não pode ter um componente.

321
00:25:02,790 --> 00:25:06,290
Você irá dar o componente pois este desenho diz que

322
00:25:06,290 --> 00:25:09,790
todos objetos deste tipo podem ter

323
00:25:09,790 --> 00:25:13,290
outros filhos. Você pensará que estes filhos poderão ter outros componentes, mas

324
00:25:13,290 --> 00:25:16,790
algo estranho irá acontecer

325
00:25:16,790 --> 00:25:20,290
...??? que você pode fazer

326
00:25:20,290 --> 00:25:23,790
é colocar código extra e checar isso pra prevenir que isso aconteça

327
00:25:23,790 --> 00:25:27,290
Mas eu aprendi isso da maneira difícil

328
00:25:27,290 --> 00:25:30,790
no ??? original, que é um MVC

329
00:25:30,790 --> 00:25:35,790
e eu fiz isso, de forma com que todas as 'views' poderiam ter 'sub-views' mas

330
00:25:35,790 --> 00:25:40,790
mas na verdade isso não poderia acontecer, e uma view de ???

331
00:25:40,790 --> 00:25:45,790
sub-view, e eu aprendi, a muito tempo

332
00:25:45,790 --> 00:25:50,790
antes de poder fazer uma captura de tela e enviar

333
00:25:50,790 --> 00:25:55,790
era apenas e-mail com texto, em torno de 1989, e-mail apenas com texto

334
00:25:55,790 --> 00:26:00,790
era tudo que tínhamos, eu poderia debugar uma interface de usuário pelo e-mail

335
00:26:00,790 --> 00:26:05,790
as pessoas iriam me dizer: 'eu tenho este problema', e todos cometiam os mesmos erros repetidamente

336
00:26:05,790 --> 00:26:10,790
e em um e-mail apenas de texto eu poderia debugar

337
00:26:10,790 --> 00:26:15,790
a interface gráfica do usuário, pois todos cometiam os mesmos erros.

338
00:26:15,790 --> 00:26:20,790
E um desenho assim, leva você à fazer isso. Então, no verdadeiro padrão composite

339
00:26:20,790 --> 00:26:25,790
nós temos a classe 'component' e temos tipos diferentes de subclasses

340
00:26:25,790 --> 00:26:30,790
então nós temos as folhas que não podem ter componentes, e nós temos

341
00:26:30,790 --> 00:26:35,790
composites, as classes que podem ter.

342
00:26:35,790 --> 00:26:40,790
Então, se você está desenvolvendo views de interface gráfica

343
00:26:40,790 --> 00:26:45,790
então você tem as 'views' e você tem as 'views' que não podem ter componentes

344
00:26:45,790 --> 00:26:50,790
Um ponto chave, é que estes tipos de objetos

345
00:26:50,790 --> 00:26:55,790
devem ter a mesma interface, sempre que possível.

346
00:26:55,790 --> 00:27:00,790
e há algumas coisas que sempre se tornam problemas

347
00:27:00,790 --> 00:27:05,790
o livro fala disso, mas

348
00:27:05,790 --> 00:27:10,790
Enumerando o filho, quando você enumera uma classe filho

349
00:27:10,790 --> 00:27:15,790
logo a iteração

350
00:27:15,790 --> 00:27:20,790
não faz nada e isso é um tipo de problema clássico

351
00:27:20,790 --> 00:27:25,790
que acontece toda vez usando composite, para interfaces e 'views'

352
00:27:25,790 --> 00:27:30,790
ou qualquer que seja.

353
00:27:30,790 --> 00:27:35,790
Outro padrão é o padrão 'observador'

354
00:27:35,790 --> 00:27:40,790
e o padrão observador é o que nós temos

355
00:27:40,790 --> 00:27:45,790
algum objeto que muda de estado, algo acontece

356
00:27:45,790 --> 00:27:50,790
e muda seu estado e nós temos outros objetos que dependem dele. E a maneira clássica

357
00:27:50,790 --> 00:27:55,790
é que os primeiros objetos precisam mudar de estados como parte dos dados da aplicação

358
00:27:55,790 --> 00:28:00,790
e os objetos que dependem dele são partes da interface de usuário, e quando você os muda

359
00:28:00,790 --> 00:28:05,790
por exemplo, editando um trecho de 'carta' e quando você muda este trecho

360
00:28:05,790 --> 00:28:10,790
nós queremos que a tela, que é uma 'foto' da carta mude automaticamente

361
00:28:10,790 --> 00:28:15,790
E este é o padrão utilizado em praticamente qualquer 'framework' de interface de usuário por aí.

362
00:28:15,790 --> 00:28:20,790
Em java, eles chamam isso de 'listeners' ao invés de 'observer' mas é o mesmo padrão.

363
00:28:20,790 --> 00:28:25,790
Algo interessante sobre

364
00:28:25,790 --> 00:28:30,790
toda implementação deste padrão é que nós

365
00:28:30,790 --> 00:28:35,790
temos dois tipos de objetos, e o livro chama eles de 'Subject'

366
00:28:35,790 --> 00:28:40,790
é o tipo que você tem o estado que mudará

367
00:28:40,790 --> 00:28:45,790
e você tem o 'observer', que depende do 'Subject'

368
00:28:45,790 --> 00:28:50,790
E quando o 'Subject' muda, o 'observer' tem que ser notificado.

369
00:28:50,790 --> 00:28:55,790
Notificação de eventos, a Microsoft chama isso de

370
00:28:55,790 --> 00:29:00,790
'publicar' e 'assinar'

371
00:29:00,790 --> 00:29:05,790
Isso é o abstrato, temos os 'subjects'

372
00:29:05,790 --> 00:29:10,790
os 'observers' que devem ficar de olho em caso de mudança

373
00:29:10,790 --> 00:29:15,790
e então nós fazemos sub-classes concretas destes, como:

374
00:29:15,790 --> 00:29:20,790
modelo baseado nos 'gangsters de Chicago', em que temos os

375
00:29:20,790 --> 00:29:25,790
'gangsters' roubando bancos, e temos os agentes do FBI , como na década de 20

376
00:29:25,790 --> 00:29:30,790
sim, em torno de 1920

377
00:29:30,790 --> 00:29:35,790
quando eles vigiavam os 'gangsters' com binóculos

378
00:29:35,790 --> 00:29:40,790
E grampeando telefones, essas coisas. Ou seja, observando eles

379
00:29:40,790 --> 00:29:45,790
Quando um criminoso está prestes a roubar um banco

380
00:29:45,790 --> 00:29:50,790
dirigir um carro, ou fazer qualquer ação, os agentes do FBI são

381
00:29:50,790 --> 00:29:55,790
tentando perceber essa ação, pois estão 'observando'.  Talvez podem fugir, ou não

382
00:29:55,790 --> 00:30:00,790
pois o 'subject' nunca sabe se qualquer coisa está o observando.

383
00:30:00,790 --> 00:30:05,790
ele não sabe quantos estão o observando. É por isso que quando se faz este tipo de programação,

384
00:30:05,790 --> 00:30:10,790
é necessário que sejam adicionados mais observadores, quando você usa o padrão 'observer'.

385
00:30:10,790 --> 00:30:15,790
O que você tem que fazer...quando usa este padrão

386
00:30:15,790 --> 00:30:20,790
haverão classes observadores,

387
00:30:20,790 --> 00:30:25,790
ou a interface, em JAVA

388
00:30:25,790 --> 00:30:30,790
neste caso nós temos essa operação de 'update'

389
00:30:30,790 --> 00:30:35,790
uma subclasse pra fazer operações relacionadas ao crime,

390
00:30:35,790 --> 00:30:40,790
operações como 'roubar um banco' ou 'dirigir um carro'

391
00:30:40,790 --> 00:30:45,790
você tem que ter certeza que você notifique quando você chame uma operação que irá

392
00:30:45,790 --> 00:30:50,790
chamar o método 'update' quando mudar alguma dessas operações.

393
00:30:50,790 --> 00:30:55,790
Quando o observador, neste caso o agente do FBI

394
00:30:55,790 --> 00:31:00,790
e vai pro observador 'Mobster'

395
00:31:00,790 --> 00:31:05,790
e chama as operações 'addDependent' ou 'removeDependent', pra definir essa dependência.

396
00:31:05,790 --> 00:31:10,790
No tempo de execução,

397
00:31:10,790 --> 00:31:15,790
o 'subject' irá ter uma lista de observadores, isso parece estranho, mas pense

398
00:31:15,790 --> 00:31:20,790
que cada agente do FBI vigia um criminoso, e que cada criminoso

399
00:31:20,790 --> 00:31:25,790
tem a lista dos agentes que o vigia, isso não faz sentido nenhum, pois é completamente errado.

400
00:31:25,790 --> 00:31:30,790
Mas de um ponto de vista da implementação,

401
00:31:30,790 --> 00:31:35,790
isso precisa ser desse jeito, pois quando eles mudam, precisam notificar o 'subject'

402
00:31:35,790 --> 00:31:40,790
você precisa rodar essa lista de observadores, em todas as dependências

403
00:31:40,790 --> 00:31:45,790
de 'Mobster', a variável que mantém a lista

404
00:31:45,790 --> 00:31:50,790
poderia ser acessada de um ponto de vista de programação.

405
00:31:50,790 --> 00:31:55,790
Mas você está num 'debugger' e você tem o sistema todo,

406
00:31:55,790 --> 00:32:00,790
e pensa como você pode programar, como vai fazer isso

407
00:32:00,790 --> 00:32:05,790
acontecer em programação? Isso tem que ser dessa maneira.

408
00:32:05,790 --> 00:32:10,790
De toda forma, é um padrão muito popular.

409
00:32:10,790 --> 00:32:15,790
Então, estes padrões estão no livro

410
00:32:15,790 --> 00:32:20,790
???

411
00:32:20,790 --> 00:32:25,790
no padrão 'observer', que basicamente diz que quando você olha como o mundo está mudando

412
00:32:25,790 --> 00:32:30,790
e como as pessoas usam o padrão 'observer', tem ido em várias direções

413
00:32:30,790 --> 00:32:35,790
e o livro não previu. Quando nós falamos sobre um padrão,

414
00:32:35,790 --> 00:32:40,790
muito geral, 'você pode fazer assim', 'ou assim', 'ou daquele jeito'

415
00:32:40,790 --> 00:32:45,790
isso é como as pessoas estão fazendo!

416
00:32:45,790 --> 00:32:50,790
Nós previmos como as pessoas iriam fazer isso? ...Não

417
00:32:50,790 --> 00:32:55,790
E em alguns casos eu diria: 'eu comecei a programar a 20 anos atrás...

418
00:32:55,790 --> 00:33:00,790
...dessa maneira, como nós não escrevemos melhor o livro?', 'nós deveríamos ter previsto isso'

419
00:33:00,790 --> 00:33:05,790
Pois eu impedi as pessoas de fazer isso 20 anos atrás

420
00:33:05,790 --> 00:33:10,790
É sempre 20/20, é um

421
00:33:10,790 --> 00:33:15,790
ditado americano, uma visão 20/20, muito boa

422
00:33:15,790 --> 00:33:20,790
Dizer que você tem uma visão 20/20 significa que quando você olhar pra trás sempre poderá ver os erros que cometeu

423
00:33:20,790 --> 00:33:25,790
Mas claro que olhar adiante é o ???

424
00:33:25,790 --> 00:33:30,790
'Value object' é um padrão que não está no livro, não está no livro

425
00:33:30,790 --> 00:33:35,790
E a ideia aqui

426
00:33:35,790 --> 00:33:40,790
do que um 'value object' é...

427
00:33:40,790 --> 00:33:45,790
poucas pessoas parecem saber o que é...

428
00:33:45,790 --> 00:33:50,790
Objetos imutáveis, que nunca mudam

429
00:33:50,790 --> 00:33:55,790
você tem que configurar as variáveis quando as constrõe

430
00:33:55,790 --> 00:34:00,790
ou seja, o construtor define a variável quando são criadas

431
00:34:00,790 --> 00:34:05,790
e você não as muda mais. E isso é um estilo popular

432
00:34:05,790 --> 00:34:10,790
se você pensar em uma... ... ...

433
00:34:10,790 --> 00:34:15,790
data, horário do dia, que tendem a não mudar.

434
00:34:15,790 --> 00:34:20,790
as variáveis nisso. Quando você tem um 'value object'

435
00:34:20,790 --> 00:34:25,790
o mais importante é a igualdade, você tem que saber que essas

436
00:34:25,790 --> 00:34:30,790
dois valores são iguais independente do momento

437
00:34:30,790 --> 00:34:35,790
E é usado em vários lugares, pois

438
00:34:35,790 --> 00:34:40,790
a falta de 'efeitos colaterais' faz parte, e você pode compartilhar várias ??? como num programa 'multi-thread'

439
00:34:40,790 --> 00:34:45,790
Quando você está compartilhando objetos com estados então você precisa sincronizá-los

440
00:34:45,790 --> 00:34:50,790
você está compartilhando objetos de valor

441
00:34:50,790 --> 00:34:55,790
E você quer enviar por fio

442
00:34:55,790 --> 00:35:00,790
em um sistema distribuído...

443
00:35:00,790 --> 00:35:05,790
com números

444
00:35:05,790 --> 00:35:10,790
normais ou polinomiais,

445
00:35:10,790 --> 00:35:15,790
Raiz quadra de 3+4x  como valor,

446
00:35:15,790 --> 00:35:20,790
???

447
00:35:20,790 --> 00:35:25,790
novo polinômio

448
00:35:25,790 --> 00:35:30,790
mudando o antigo e há vários lugares onde esse 'value object' é normalmente

449
00:35:30,790 --> 00:35:35,790
é a maneira correta de pensar.

450
00:35:35,790 --> 00:35:40,790
O 'null object' é um truque de programação

451
00:35:40,790 --> 00:35:45,790
utilizado amplamente em programas, nós escrevemos códigos que assim

452
00:35:45,790 --> 00:35:50,790
e pensamos 'esse objeto é NULL e nós temos que fazer alguma coisa', e normalmente

453
00:35:50,790 --> 00:35:55,790
não é algo que irá causar má funcionalidade,

454
00:35:55,790 --> 00:36:00,790
Mas e se NULL fosse mesmo um objeto? do mesmo tipo desse objeto?(obj)

455
00:36:00,790 --> 00:36:05,790
Então você poderia simplesmente dizer

456
00:36:05,790 --> 00:36:10,790
...se a variável obj for NULL,...

457
00:36:10,790 --> 00:36:15,790
você saberia que o erro estaria ali. Se o seu código

458
00:36:15,790 --> 00:36:20,790
está implementado com essas referências, então você pode

459
00:36:20,790 --> 00:36:25,790
simplificar as coisas fazendo uma classe

460
00:36:25,790 --> 00:36:30,790
que significa normal pra você. Fazer uma classe que é parte de um ...

461
00:36:30,790 --> 00:36:35,790
Faça um objeto nulo que implemente a interface de obj. E isso se relaciona com outros padrões,

462
00:36:35,790 --> 00:36:40,790
pois você vê que quando você constrói uma classe usando 'composite'

463
00:36:40,790 --> 00:36:45,790
o padrão 'composite', então nós temos essa parte composta e também á uma parte do  padrão 'decorator'

464
00:36:45,790 --> 00:36:50,790
Pois normalmente utiliza-se os padrões 'composite' e 'decorator' juntos, fazendo sub-classes diferentes para...

465
00:36:50,790 --> 00:36:55,790
padrões diferentes tendo uma parte nula (NullPart)

466
00:36:55,790 --> 00:37:00,790
ou seja, você tem uma parte

467
00:37:00,790 --> 00:37:05,790
talvez não aja parte que seja um objeto real

468
00:37:05,790 --> 00:37:10,790
??? alguma coisa especial na sua linguagem

469
00:37:10,790 --> 00:37:15,790
nenhum objeto se encaixa em

470
00:37:15,790 --> 00:37:20,790
outros padrões descritos no livro. Nós erramos nisso,

471
00:37:20,790 --> 00:37:25,790
algo simples, não muito complicado...

472
00:37:25,790 --> 00:37:30,790
mas...a... e isso era bem na primeira edição.

473
00:37:30,790 --> 00:37:35,790
Os livro foi lançado e as pessoas diziam: 'Hey, eles

474
00:37:35,790 --> 00:37:40,790
esqueceram esse padrão'. Então eles publicaram

475
00:37:40,790 --> 00:37:45,790
...uma outra maneira de olhar para os padrões é dizendo

476
00:37:45,790 --> 00:37:50,790
'Como as pessoas os usam incorretamente?' ...

477
00:37:50,790 --> 00:37:55,790
E é meio chocante pra mim, como as pessoas leem o livro...

478
00:37:55,790 --> 00:38:00,790
e parece que eles são pessoas aparentemente inteligentes, mas eles leem o livro

479
00:38:00,790 --> 00:38:05,790
e fariam as coisas mais estúpidas.

480
00:38:05,790 --> 00:38:10,790
Nós não tínhamos ideia de que as pessoas fariam algo assim

481
00:38:10,790 --> 00:38:15,790
E o padrão 'Mediator' é um deles,

482
00:38:15,960 --> 00:38:20,790
'Singleton' é outro assim, e eu consigo lembrar

483
00:38:20,790 --> 00:38:25,790
eram dois anos após o lançamento do livro, estávamos em uma conferência e alguém disse:

484
00:38:25,790 --> 00:38:30,790
Que eles já utilizavam o 'Singleton' para seus projetos

485
00:38:30,790 --> 00:38:35,790
por mais de 20 vezes,

486
00:38:35,790 --> 00:38:40,790
e 'Mediator' várias outras vezes.

487
00:38:40,790 --> 00:38:45,790
...

488
00:38:45,790 --> 00:38:50,790
Minha reação, ...

489
00:38:50,790 --> 00:38:55,790
há algo errado, e por que eles fariam

490
00:38:55,790 --> 00:39:00,790
algo tão estupido? O 'singleton' deve ser usado

491
00:39:00,790 --> 00:39:05,790
para encapsular estados globais, ...

492
00:39:05,790 --> 00:39:10,790
E muitas pessoas usam este padrão pra fazer alguma mágica,

493
00:39:10,790 --> 00:39:15,790
pra fazer estados globais algo bom. Então tentam se livrar deste problema por meio do padrão.

494
00:39:15,790 --> 00:39:20,790
Eles não tentavam gerenciar o padrão, e sim

495
00:39:20,790 --> 00:39:25,790
explodir estados globais...

496
00:39:25,790 --> 00:39:30,790
(!@35$%¨$63$&%$)?

497
00:39:30,790 --> 00:39:35,790
Como eles faziam isso, mas eles estavam basicamente tentando usá-lo como um

498
00:39:35,790 --> 00:39:40,790
maneira de fazer estados globais bons, mas não! Ele não faz com que os estados globais sejam bons.

499
00:39:40,790 --> 00:39:45,790
'Mediator' é um exemplo interessante, pois

500
00:39:45,790 --> 00:39:50,790
'Mediators' são sempre feios, são sempre 'adaptadores' (gambiarra?) e são sempre feios

501
00:39:50,790 --> 00:39:55,790
Mas há um propósito por trás deste padrão, e se você usá-lo

502
00:39:55,790 --> 00:40:00,790
de forma que isso funcione bem, encapsulando a 'feiura'

503
00:40:00,790 --> 00:40:05,790
Se eu utilizo um adaptador, eu não espero que tenha boa aparência

504
00:40:05,790 --> 00:40:10,790
Eu sei que é uma gambiarra e que estou reutilizando algo

505
00:40:10,790 --> 00:40:15,790
que não deveria estar ali, tentando converter uma interface em outra

506
00:40:15,790 --> 00:40:20,790
e é isso, adaptadores são bem simples quando você pensa em um número ???

507
00:40:20,790 --> 00:40:25,790
Eles nunca possuem boa aparência, e 'mediators' são a mesma coisa. O propósito do 'mediator'

508
00:40:25,790 --> 00:40:30,790
é que você ...

509
00:40:30,790 --> 00:40:35,790
???, constrói uma aplicação e constróis outra aplicação

510
00:40:35,790 --> 00:40:40,790
o que acontece é quando você vai de uma aplicação pra outra tentando utilizar essa classe

511
00:40:40,790 --> 00:40:45,790
você acabará mudando as classes repetidamente,

512
00:40:45,790 --> 00:40:50,790
você muda as classes que você quer que sejam reutilizáveis.

513
00:40:50,790 --> 00:40:55,790
???

514
00:40:55,790 --> 00:41:00,790
Adiciona código às classes, mas elas não estão sendo reutilizáveis como você

515
00:41:00,790 --> 00:41:05,790
queria e você olha pra isso e a razão por não estarem é porquê

516
00:41:05,790 --> 00:41:10,790
elas precisam se comunicar uma com a outra.

517
00:41:10,790 --> 00:41:15,790
há um padrão de comunicação que muda a todo tempo

518
00:41:15,790 --> 00:41:20,790
O que eu faria seria adicionar uma nova classe, um 'mediator'.

519
00:41:20,790 --> 00:41:25,790
E a parte ??? do 'mediator' será diferente toda vez. Então agora que eu quero

520
00:41:25,790 --> 00:41:30,790
fazer uma nova aplicação utilizando minhas classes antigas,

521
00:41:30,790 --> 00:41:35,790
eu devo reescrever um novo 'mediator', mas eu posso reutilizar as outras sub-classes.

522
00:41:35,790 --> 00:41:40,790
É neste caso que 'mediators' funcionam, neste caso que ele é bom.

523
00:41:40,790 --> 00:41:45,790
As pessoas frequentemente fazem é, ter todas essas classes simples,

524
00:41:45,790 --> 00:41:50,790
com dados, talvez sem nenhum comportamento e tem um 'mediator' para tooodas

525
00:41:50,790 --> 00:41:55,790
o código do 'mediator', e isso era muito

526
00:41:55,790 --> 00:42:00,790
comum no passado, quando as pessoas não sabiam como programar orientado a objetos

527
00:42:00,790 --> 00:42:05,790
E agora eles estão tentando utilizar POO, de forma com que todos os registros

528
00:42:05,790 --> 00:42:10,790
se tornam classes, e o 'main' se tornam esse 'mediator' gigante

529
00:42:10,790 --> 00:42:15,790
Eu ainda vejo pessoas hoje em dia, que colocam toda a lógica

530
00:42:15,790 --> 00:42:20,790
em um só lugar, e eles chamam aquilo de 'mediator' e dizem:

531
00:42:20,790 --> 00:42:25,790
'isso é um mediator', mas isso não é o propósito, não faz com que as outras classes sejam utilizáveis

532
00:42:25,790 --> 00:42:30,790
'Mediators' serão sempre feios se....se...

533
00:42:30,790 --> 00:42:35,790
essa 'feiura' faz com que todo o resto se torne inutilizável.

534
00:42:35,790 --> 00:42:40,790
Mas caso contrário, então você não está fazendo errado.

535
00:42:40,790 --> 00:42:45,790
...Então, ambos são padrões

536
00:42:45,790 --> 00:42:50,790
...Há uma outra versão de 'singleton', que faz um bom trabalho

537
00:42:50,790 --> 00:42:55,790
prevendo todos os erros que as pessoas cometem com o Singleton. Ainda não fiz o mesmo para o 'mediator'.

538
00:42:55,790 --> 00:43:00,790
A....Mas...

539
00:43:00,790 --> 00:43:05,790
É mais fácil se culpar,

540
00:43:05,790 --> 00:43:10,790
e dizer: 'eu deveria ter feito isso!' ou 'eu deveria ter feito aquilo'. Mas você não pode prever como as pessoas

541
00:43:10,790 --> 00:43:15,790
irão interpretar o que você faz.

542
00:43:15,790 --> 00:43:20,790
Centenas de pessoas leem o livro, antes de ser publicado, pessoas com quem conversamos.

543
00:43:20,790 --> 00:43:25,790
Tínhamos uma lista de e-mail, algo em torno de 500 pessoas na lista de e-mail

544
00:43:25,790 --> 00:43:30,790
apenas 10% dessas pessoas responderam com alguma coisa, e isso é muito

545
00:43:30,790 --> 00:43:35,790
típico... Muitas pessoas leem e poucas pessoas ajudam.

546
00:43:35,790 --> 00:43:40,790
Nós não tivemos 'workshops' de leitura, algo que deveríamos ter aprendido sobre...

547
00:43:40,790 --> 00:43:45,790
mas tínhamos vários amigos, além da lista de e-mail

548
00:43:45,790 --> 00:43:50,790
amigos que deram um 'feedback' e ??? forneceram várias avaliações.

549
00:43:50,790 --> 00:43:55,790
E Jhon ??? tinha várias pessoas dentro da IBM...

550
00:43:55,790 --> 00:44:00,790
Mas várias pessoas que têm essa ???, e continuam errando...E é assim que funciona.

551
00:44:00,790 --> 00:44:05,790
É complicado, é dificil de fazer tudo certo...

552
00:44:05,790 --> 00:44:10,790
É muito importante que os leitores deem 'feedback' e as pessoas começaram a usar isso...

553
00:44:10,790 --> 00:44:15,790
e eles descobriram coisas que você não explicou muito bem...

554
00:44:15,790 --> 00:44:20,790
para...para...voltar atrás e resolver...

555
00:44:20,790 --> 00:44:25,790
???

556
00:44:25,790 --> 00:44:30,790
...Ok, outra categoria

557
00:44:30,790 --> 00:44:35,790
é a 'creational' (CRIACIONAL), que tinha 5 padrões, sendo eles 'Abstract factory'...

558
00:44:35,790 --> 00:44:40,790
'Factory Method', que não é realmente um ???

559
00:44:40,790 --> 00:44:45,790
'Prototype', 'builder' e 'singleton' que é frequentemente mal utilizado mas eu acho que

560
00:44:45,790 --> 00:44:50,790
não é como as pessoas dizem, que é um padrão ruim...Mas eu não acho que seja um padrão ruim

561
00:44:50,790 --> 00:44:55,790
Apenas precisa ser utilizado propriamente. Qualquer coisa é ruim quando usada de forma não apropriada.

562
00:44:55,790 --> 00:45:00,790
A questão é? quando este padrão pode ser utilizado devidamente? e quando não deve.

563
00:45:00,790 --> 00:45:05,790
... ... Um padrão que se tornou popular desde

564
00:45:05,790 --> 00:45:10,790
o lançamento do livro, é o 'Dependency Injection'. E essa é a ideia principal

565
00:45:10,790 --> 00:45:15,790
Muda as coisas, por exemplo: o padrão 'Factory' passou a ser usado com menos frequência...

566
00:45:15,790 --> 00:45:20,790
'singleton' foi usado menos, são maneiras de evitar

567
00:45:20,790 --> 00:45:25,790
maneiras de evitar...estes outros padrões...

568
00:45:25,790 --> 00:45:30,790
Os outros padrões...que não muda tudo, mas...

569
00:45:30,790 --> 00:45:35,790
... ... Sim?!

570
00:45:35,790 --> 00:45:40,790
'Eu sinto falta, nos padrões criacionais...

571
00:45:40,790 --> 00:45:45,790
... um padrão 'factory' fundamental'.  Por exemplo: Eu quero um método...

572
00:45:45,790 --> 00:45:50,790
que eu posso retornar sub-classes, por exemplo...

573
00:45:50,790 --> 00:45:55,790
Eu acho que isso faz falta...

574
00:45:55,790 --> 00:46:00,790
conceitos básicos, pois 'abstract factory' e 'factory' são...

575
00:46:00,790 --> 00:46:05,790
problemas mais específicos. E eu quero delegar...

576
00:46:05,790 --> 00:46:10,790
a criação de um objeto como um padrão.

577
00:46:10,790 --> 00:46:15,790
A maneira que eu faço, eu falo sobre um método 'factory' VS

578
00:46:15,790 --> 00:46:20,790
um objeto 'factory' e um objeto 'factory' é um objeto que você chama...

579
00:46:20,790 --> 00:46:25,790
pra criar mais objetos. E ambos, 'Abstract factory', 'Builder'...

580
00:46:25,790 --> 00:46:30,790
E 'prototype' são todos exemplos destes, mas em uma linguagem são classes de objetos.

581
00:46:30,790 --> 00:46:35,790
A classe é um objeto 'factory'  também. Então há várias maneiras onde você pega...

582
00:46:35,790 --> 00:46:40,790
...E há outra tipo de objeto 'factory' que não faz parte de nenhum destes, então essa é uma noção de

583
00:46:40,790 --> 00:46:45,790
ter uma fact... um objeto que faz as coisas pra você.

584
00:46:45,790 --> 00:46:50,790
O método 'factory' é mais simples, pois você sempre tem um método

585
00:46:50,790 --> 00:46:55,790
que você chama, então é limitado com o que você pode fazer, mas é também muito fácil de implementar.

586
00:46:55,790 --> 00:47:00,790
Você não tem que pensar sobre isso, o método 'factory', quando você começa a ter objetos 'factory'

587
00:47:00,790 --> 00:47:05,790
Você precisa pensar mais sobre desenhar...Mas há diferentes ??? que você pode tomar,

588
00:47:05,790 --> 00:47:10,790
você já sabe que o 'builder' é um protótipo, e há

589
00:47:10,790 --> 00:47:15,790
sempre há a limitação de espaço quando você escreve um livro...

590
00:47:15,790 --> 00:47:20,790
... e tempo. Eu não publicaria o livro se eu continuasse escrevendo...

591
00:47:20,790 --> 00:47:25,790
'O que eu faço é:  eu estou ensinando que...

592
00:47:25,790 --> 00:47:30,790
...eu esqueci o nome do livro...que fala sobre...

593
00:47:30,790 --> 00:47:35,790
Boas práticas em Java...que fala sobre...'(interrompido)...

594
00:47:35,790 --> 00:47:40,790
'Effective Java', isso 'Effective java' ...

595
00:47:40,790 --> 00:47:45,790
Que fala sobre o método 'Abstract factory' como um padrão...

596
00:47:45,790 --> 00:47:50,790
Então eu comecei com isso e por exemplo, dizendo que 'Singleton' é um...

597
00:47:50,790 --> 00:47:55,790
um exemplo mais específico disso e então eu vou pra outro...

598
00:47:55,790 --> 00:48:00,790
tipo de 'factory', mas eu sinto falta desse conceito básico...

599
00:48:00,790 --> 00:48:05,790
que eu acho que as pessoas...apenas esse conceito de...

600
00:48:05,790 --> 00:48:10,790
delegar a criação de um objeto...

601
00:48:10,790 --> 00:48:15,790
(...)

602
00:48:15,790 --> 00:48:20,790
...Então. Se você tem padrões principais, logo você tem os que não são...

603
00:48:20,790 --> 00:48:25,790
Como o criacional 'Peripheral',...

604
00:48:25,790 --> 00:48:30,790
que é uma categoria bem definida, exemplos de criacionais e operacionais...

605
00:48:30,790 --> 00:48:35,790
Mas como não são principais, os chamamos de 'peripheral'...

606
00:48:35,790 --> 00:48:40,790
Como 'Visitor' é um tipo de padrão que as pessoas escrevem mais artigos...

607
00:48:40,790 --> 00:48:45,790
do que sobre o próprio livro. Então há mais artigos sobre o 'visitor' do que sobre o livro.

608
00:48:45,790 --> 00:48:50,790
Pois 'visitors' são... aprimeira vez que você vê 'visitor' como um programador 'orientado a objeto'...

609
00:48:50,790 --> 00:48:55,790
A primeira vez que você o vê, faz sua cabeça doer...

610
00:48:55,790 --> 00:49:00,790
É meio estranho, a maneira como as coisas são feitas...mas quando você entende, então você entende

611
00:49:00,790 --> 00:49:05,790
o padrão do Polimorfismo, alguns truques relacionados a polimorfismo...É um dos padrões mais

612
00:49:05,790 --> 00:49:10,790
difíceis de entender no livro, e na verdade não é usado tão frequentemente.

613
00:49:10,790 --> 00:49:15,790
Quando você está construindo linguagens, compiladores...

614
00:49:15,790 --> 00:49:20,790
Então isso é bem útil...Mas se você só está fazendo...

615
00:49:20,790 --> 00:49:25,790
um software de negócios geral, então 'visitor' não é tão útil...

616
00:49:25,790 --> 00:49:30,790
É muito mal usado, pois as pessoas o leem como 'legal',

617
00:49:30,790 --> 00:49:35,790
Você lê a primeira vêz e não entende, lê a segunda vez e não entende, fala com alguém...

618
00:49:35,790 --> 00:49:40,790
Lê novamente, tenta programar e de repente as luzes acendem e você pensa: '<b>UAU, isso é incrível!'</b>

619
00:49:40,790 --> 00:49:45,790
E pensa: 'Eu quero usar isso no meu programa', e começa a pensar onde poderia usar-lo...

620
00:49:45,790 --> 00:49:50,790
e você tem uma ideia que geralmente não é muito boa.

621
00:49:50,790 --> 00:49:55,790
... A maioria das vezes não é uma boa ideia...

622
00:49:55,790 --> 00:50:00,790
... Mas de fato, é um padrão problemático e...

623
00:50:00,790 --> 00:50:05,790
Em termos de quantas vezes ele é mal utilizado, 'Singleton' e 'Mediator'

624
00:50:05,790 --> 00:50:10,790
São mal utilizados com maior frequência...mas...

625
00:50:10,790 --> 00:50:15,790
O 'bridge' é engraçado, pois é muito comum em C++ e não é utilizado em outra linguagem...

626
00:50:15,790 --> 00:50:20,790
E é algo que eu ainda tento entender, por quê não utiliza-se

627
00:50:20,790 --> 00:50:30,790
???

628
00:50:30,790 --> 00:50:35,790
Java também não usa, mas não tenho certeza...

629
00:50:35,790 --> 00:50:40,790
'Chain of Responsibility', na maioria das vezes é usado...

630
00:50:40,790 --> 00:50:45,790
quando você utiliza o padrão 'Composite' e constrói uma árvore, e você está a percorrendo...

631
00:50:45,790 --> 00:50:50,790
em cada um dos nós da árvore...

632
00:50:50,790 --> 00:50:55,790
lida com as solicitações ou 'delaga' para os nós pais

633
00:50:55,790 --> 00:51:00,790
É por isso que eu penso se é separar padrões, como neste caso...

634
00:51:00,790 --> 00:51:05,790
quando você tem uma 'chain of responsability' sem utilizar um 'composite', e eu aposto que em 80% das vezes

635
00:51:05,790 --> 00:51:10,790
é parte do 'composite', vale a pena, nós escrevemos no livro então não vamos

636
00:51:10,790 --> 00:51:15,790
???

637
00:51:15,790 --> 00:51:20,790
Estes são padrões que nós escrevemos baseado em pessoas que utilizaram do modelo de adaptação

638
00:51:20,790 --> 00:51:25,790
'Type object', ao invés de algo que seja muito popular...

639
00:51:25,790 --> 00:51:30,790
é por isso que utilizamos a parte...'Extension object' foi algo

640
00:51:30,790 --> 00:51:35,790
que Eric escreveu sobre...

641
00:51:35,790 --> 00:51:40,790
'Generation gap' é algo que ??? escreveu sobre...

642
00:51:40,790 --> 00:51:45,790
E em respeito a sua memória eu...

643
00:51:45,790 --> 00:51:50,790
vou colocar no livro...

644
00:51:50,790 --> 00:51:55,790
Há também padrões que você pode pensar como sendo...

645
00:51:55,790 --> 00:52:00,790
que compoem outros padrões, e quando as pessoas falam sobre linguagens de padrões

646
00:52:00,790 --> 00:52:05,790
eles se interessam muito mais...De fato, quando você está escrevendo o livro, umas das coisas

647
00:52:05,790 --> 00:52:10,790
que nós tentamos evitar é dizer: 'esse padrão foi feito desse outro'

648
00:52:10,790 --> 00:52:15,790
Nós só queremos apresentar padrões, não queremos falar de teoria dos padrões...

649
00:52:15,790 --> 00:52:20,790
Esse padrão é relacionado a este, que é relacionado a aquele...

650
00:52:20,790 --> 00:52:25,790
...Programadores sempre querem

651
00:52:25,790 --> 00:52:30,790
fazer melhor, fazer algo em um nível mais abstrato

652
00:52:30,790 --> 00:52:35,790
e algumas vezes você só precisa de focar nos detalhes concretos...

653
00:52:35,790 --> 00:52:40,790
Então, precisamos de focar nos fatos...

654
00:52:40,790 --> 00:52:45,790
Então...a questão é...

655
00:52:45,790 --> 00:52:50,790
uma classe abstrata é um padrão? ou...

656
00:52:50,790 --> 00:52:55,790
naquela época, nós não sabíamos que classes abstratas, como em JAVA

657
00:52:55,790 --> 00:53:00,790
eram parte de uma linguagem, essa é uma classe abstrata...

658
00:53:00,790 --> 00:53:05,790
E não é realmente válido para C++, quando as pessoas dizem quando você tem funções

659
00:53:05,790 --> 00:53:10,790
puramente virtual, e nós podemos ter classes abstratas sem ter

660
00:53:10,790 --> 00:53:15,790
funções puramente virtuais. Para linguagens dinâmicas,

661
00:53:15,790 --> 00:53:20,790
classes abstratas é só uma técnica de design e não que vai na linguagem.

662
00:53:20,790 --> 00:53:25,790
Logo, nós dizemos que é um padrão. Mas se nós precisarmos do padrão,

663
00:53:25,790 --> 00:53:30,790
seria de modo que todos os padrões teriam uma classe abstrata, então...

664
00:53:30,790 --> 00:53:35,790
Não falamos sobre... 'Este padrão contém este padrão',

665
00:53:35,790 --> 00:53:40,790
'O que você quer fazer?!', 'Você não quer fazer isso', Então nós não faremos com que classes abstratas sejam um padrão.

666
00:53:40,790 --> 00:53:45,790
Pois assim não tínhamos que falar sobre isso... Mas isso foi a 20 anos atrás, agora

667
00:53:45,790 --> 00:53:50,790
é tranquilo, nós falamos de um padrão relacionado a outro e a outro e é assim que as coisas são.

668
00:53:50,790 --> 00:53:55,790
E alguns destes padrões, eles não podem ser descritos...

669
00:53:55,790 --> 00:54:00,790
Você concorda que 'flyweight'...

670
00:54:00,790 --> 00:54:05,790
raramente visto implementado...'Sim, sim'...

671
00:54:05,790 --> 00:54:10,790
É mais como uma optimização ou algo assim...

672
00:54:10,790 --> 00:54:15,790
...Sim, é uma optimização...O livro

673
00:54:15,790 --> 00:54:20,790
O livro...o título do livro é...

674
00:54:20,790 --> 00:54:25,790
Padrões de Projeto - Soluções Reutilizáveis...

675
00:54:25,790 --> 00:54:30,790
de Software Orientado a Objetos...Não consigo lembrar exatamente...

676
00:54:30,790 --> 00:54:35,790
mas, o 'reutilizáveis' é parte do título no livro...

677
00:54:35,790 --> 00:54:40,790
E quando nós colocamos no título...

678
00:54:40,790 --> 00:54:45,790
Foi colocado mais pra publicidade do que pra qualquer outra coisa... Mas se você me perguntar:

679
00:54:45,790 --> 00:54:50,790
'O que há de reutilização sobre estes padrões?'Eu não conseguiria te falar...

680
00:54:50,790 --> 00:54:55,790
Na época em que o livro foi publicado, eu realmente não conseguiria dizer o por quê. Mas o que nós sabíamos...

681
00:54:55,790 --> 00:55:00,790
que obtivemos estes padrões observando softwares reutilizáveis...

682
00:55:00,790 --> 00:55:05,790
Que estes padrões eram sobre software reutilizaveis...Mas hoje em dia eu consigo te explicar...

683
00:55:05,790 --> 00:55:10,790
melhor do que a 20 anos atrás, como os padrões fazem com que o software seja reutilizável e essas coisas...

684
00:55:10,790 --> 00:55:15,790
De fato, 'flyweight' não é sobre como fazer seu programa reutilizável...

685
00:55:15,790 --> 00:55:20,790
E a maioria dos padrões, sim. É sobre fazer seu programa ser mais reutilizavel...

686
00:55:20,790 --> 00:55:25,790
Diferentemente de 'Flyweight'...

687
00:55:25,790 --> 00:55:30,790
Que as pessoas usam algumas partes dele,

688
00:55:30,790 --> 00:55:35,790
apenas algumas partes do 'Flyweight', 'Essa é uma parte'

689
00:55:35,790 --> 00:55:40,790
'Não é bem um 'flyweight', é um tipo mais leve...Mas 'flyweight' tem tantas partes...

690
00:55:40,790 --> 00:55:45,790
Que há pouca possibilidade de usar todas as partes em um programa pequeno,

691
00:55:45,790 --> 00:55:50,790
Eu acho que teria sido melhor, se nós falássemos de cada parte individual

692
00:55:50,790 --> 00:55:55,790
como se fossem diferentes padrões. E daí sim, dizer que a utilização de todas estas partes é chamada de 'Flyweight'..

693
00:55:55,790 --> 00:56:00,790
O propósito do 'Flyweight' é economizar espaço...é o caso

694
00:56:00,790 --> 00:56:05,790
quando você tem tantos objetos no sistema que você...

695
00:56:05,790 --> 00:56:10,790
Tantos objetos no sistema que consomem muita memória...

696
00:56:10,790 --> 00:56:15,790
Então sim, ele é uma otimização...Eu vejo ele mais como...quando você está tentando usar todos

697
00:56:15,790 --> 00:56:20,790
os outros padrões, você terá objetos menores, muitos outros objetos...

698
00:56:20,790 --> 00:56:25,790
E você provavelmente irá precisar de 'Singleton' de alguma forma...

699
00:56:25,790 --> 00:56:30,790
Sempre precisamos desde padrão...

700
00:56:30,790 --> 00:56:35,790
...Deixe-me eu lhes contar uma coisa...Quando nós

701
00:56:35,790 --> 00:56:40,790
tínhamos este padrão, analisando sistemas, comparando anotações...

702
00:56:40,790 --> 00:56:45,790
comparando as anotações, com as coisas que nós concordávamos...

703
00:56:45,790 --> 00:56:50,790
Algo que para 'Eric' era importante e ninguém mais pensou que fosse importante, não

704
00:56:50,790 --> 00:56:55,790
não foi pro livro...E há outras coisas como essa...

705
00:56:55,790 --> 00:57:00,790
... ... E não há teoria por trás disso...

706
00:57:00,790 --> 00:57:05,790
Não há teoria sobre Padrões de Projeto, e é baseado em observação...

707
00:57:05,790 --> 00:57:10,790
baseado no que nós vimos. E 20 anos depois sim, nós podemos ter mais teorias sobre...

708
00:57:10,790 --> 00:57:15,790
O que era importante e o que não era...

709
00:57:15,790 --> 00:57:20,790
... Eu quero dizer algumas coisas que...

710
00:57:20,790 --> 00:57:25,790
são problemas no livro...

711
00:57:25,790 --> 00:57:30,790
Um dos problemas é a refatoração dos padrões...

712
00:57:30,790 --> 00:57:35,790
E padrões de desenho, nós não queríamos dizer as pessoas...

713
00:57:35,790 --> 00:57:40,790
que a maneira correta de entender os padrões era...

714
00:57:40,790 --> 00:57:45,790
manter o desenho simples, e de acordo com o que você vai adicionando funcionalidades, vai crescendo e você vê...

715
00:57:45,790 --> 00:57:50,790
que você precisa ter um padrão, então é que deve ser feita a refatoração pra inserir o padrão ali.

716
00:57:50,790 --> 00:57:55,790
Nós não sabíamos como falar isso para as pessoas, pois frequentemente as pessoas acreditavam...

717
00:57:55,790 --> 00:58:00,790
em design adiantado, e eles queriam pensar e inserir os padrões...

718
00:58:00,790 --> 00:58:05,790
primeiro, e nós não queríamos ofender essas pessoas e fazê-los te dizer que eles

719
00:58:05,790 --> 00:58:10,790
eles estavam errados. Era por isso... que...

720
00:58:10,790 --> 00:58:15,790
... Mas você realmente deve tentar deixar o seu sistema...

721
00:58:15,790 --> 00:58:20,790
simples e refatorável... Há um livro sobre isso, escrito por Joshua Kerievsky, chamado '<i>Refactoring to Patterns'</i>

722
00:58:20,790 --> 00:58:25,790
Onde a única coisa no livro é que você pode criar todos estes padrões...

723
00:58:25,790 --> 00:58:30,790
que você pode criar e refatorar...E eu acho que isso é...

724
00:58:30,790 --> 00:58:35,790
útil relacionado a padrões...com todo o trabalho de criar e refatorar os padrões...

725
00:58:35,790 --> 00:58:40,790
A primeira coisa ao ter um sistema pequeno, é ter desenhos simples, e uma vez que seu sistema cresce...

726
00:58:40,790 --> 00:58:45,790
e mais complicado, aí sim você começa a colocá-los. E a maneira correta de pensar sobre isso é...

727
00:58:45,790 --> 00:58:50,790
saber como colocar os padrões posteriormente...

728
00:58:50,790 --> 00:58:55,790
que é claro quando as pessoas liam o livro é: 'Este padrões foram feitos por experts'...

729
00:58:55,790 --> 00:59:00,790
E em sistemas de optimização você tende a ver vários dos padrões presentes...

730
00:59:00,790 --> 00:59:05,790
'Eu quero fazer meu programa parecer bom, então irei colocar o máximo de padrões que eu puder'...

731
00:59:05,790 --> 00:59:10,790
Parece lógico, mas é uma má ideia, má ideia...

732
00:59:10,790 --> 00:59:15,790
Pois padrões não fazem mágica, eles são soluções para problemas.

733
00:59:15,790 --> 00:59:20,790
Talvez eles estão sendo a melhor solução para um problema que não existe, ou...

734
00:59:20,790 --> 00:59:25,790
talvez são as melhores soluções que você tem...Então, contar padrões...

735
00:59:25,790 --> 00:59:30,790
como se fosse equivalente a qualidade, sobre o quão obm o seu programa é...

736
00:59:30,790 --> 00:59:35,790
Da maneira que eu ensino, sobre o processo de desenho, eu digo às pessoas

737
00:59:35,790 --> 00:59:40,790
'Aqui é o sistema, coloque ESTE padrão', e então eu diria: 'É melhor assim?'

738
00:59:40,790 --> 00:59:45,790
Por várias vezes pode torná-lo pior...

739
00:59:45,790 --> 00:59:50,790
Isso pode acontecer, podemos colocar um padrão que faz com que seu programa seja pior...

740
00:59:50,790 --> 00:59:55,790
E nós vimos isso várias vezes, mas ok. Algumas vezes os padrões os tornam melhores,

741
00:59:55,790 --> 01:00:00,790
Em outras eles os tornam piores. Eles são apenas técnicas, ferramentas, e você deve utiliza-los apropriadamente...

742
01:00:00,790 --> 01:00:05,790
Mas isso está ok...As pessoas culpam os padrões quando...

743
01:00:05,790 --> 01:00:10,790
elas utilizam incorretamente. Não dizem 'isso é estúpido, eu não deveria ter feito assim', mas dizemos que a culpa é do padrão...

744
01:00:10,790 --> 01:00:15,790
Você deveria ter feito correto, diferente...

745
01:00:15,790 --> 01:00:20,790
Mas existem muitas pessoas que fazem isso...E isso são razões para padrões,

746
01:00:20,790 --> 01:00:25,790
Por quê utilizar alguns padrões, reutilizar...

747
01:00:25,790 --> 01:00:30,790
Gerenciamento de variabilidade, ser capaz de dissociar partes do sistema, pra facilitar as mudanças...

748
01:00:30,790 --> 01:00:35,790
Gerenciamento de dependências, que diz o por que algumas partes do sistema estão lá e suas razões...

749
01:00:35,790 --> 01:00:40,790
Eu gosto do... livro 'Heads up Patterns',

750
01:00:40,790 --> 01:00:45,790
Um outro livro sobre padrões de projeto, em que eles vão nos padrões...

751
01:00:45,790 --> 01:00:50,790
Eles não possuem todos aqueles padrões, e eles dão motivos para a utilização de cada um.

752
01:00:50,790 --> 01:00:55,790
Eu gostaria que a próxima versão do livro...

753
01:00:55,790 --> 01:01:00,790
explicasse as características de desenho, de forma com que você pudesse ter os princípios de desenho...

754
01:01:00,790 --> 01:01:05,790
...ilustrados nos padrões...

755
01:01:05,790 --> 01:01:10,790
E...Padrões são exemplos de princípios

756
01:01:10,790 --> 01:01:15,790
Seria legal se pudéssemos ver isso no livro...

757
01:01:15,790 --> 01:01:20,790
A ideia principal do livro, têm sido linguagens de padrões...

758
01:01:20,790 --> 01:01:25,790
Não somente os padrões individuais, temos diversos artigos sobre os padrões individuais...

759
01:01:25,790 --> 01:01:30,790
Mas, realmente tentando ver como utilizar todo este conjunto de padrões juntos...

760
01:01:30,790 --> 01:01:35,790
com algum propósito...Padrões de projeto...

761
01:01:35,790 --> 01:01:40,790
não é um ???, nós não tentamos ser um ??? de forma alguma...

762
01:01:40,790 --> 01:01:45,790
...Especialmente fazendo...

763
01:01:45,790 --> 01:01:50,790
software mais reutilizáveis, nós escrevemos um artigo sobre...

764
01:01:50,790 --> 01:01:55,790
... Envolvendo 'frameworks', que era...

765
01:01:55,790 --> 01:02:00,790
... 16 anos atrás.. Não tenho certeza...

766
01:02:00,790 --> 01:02:05,790
'97 ou 98'...É algo assim, em torno de 16 anos...

767
01:02:05,790 --> 01:02:10,790
E é algo que eu gostaria de voltar atrás...

768
01:02:10,790 --> 01:02:15,790
Isso mostra como padrões de projeto...

769
01:02:15,790 --> 01:02:20,790
não acontecem no primeiro passo do seu software, e sim de acordo com que ele vai crescendo...

770
01:02:20,790 --> 01:02:25,790
E precisa ser mais reutilizável...

771
01:02:25,790 --> 01:02:30,790
...

772
01:02:30,790 --> 01:02:35,790
Quando você olha pra trás e vê o que você fez...

773
01:02:35,790 --> 01:02:40,790
é vai que você vê que poderia ter feito melhor. Mas eu sou feliz por ter sido parte

774
01:02:40,790 --> 01:02:45,790
do livro.  Eu era a quarta pessoa, a terceira era ???...

775
01:02:45,790 --> 01:02:50,790
Eric foi quem teve a ideia, então ele pegou Richard e eles trabalharam juntos

776
01:02:50,790 --> 01:02:55,790
E há em um capítulo no livro do Eric,

777
01:02:55,790 --> 01:03:00,790
que um destes padrões...Está em alemão...

778
01:03:00,790 --> 01:03:05,790
Eu não leio alemão, mas parece pra mim...

779
01:03:05,790 --> 01:03:10,790
Ser um livro sobre padrões de projeto. Se eu lesse alemão eu teria certeza...

780
01:03:10,790 --> 01:03:15,790
Então Eric trabalhou nisso por um tempo, tiveram Richard envolvido...

781
01:03:15,790 --> 01:03:20,790
Então eles me convidaram, e eu sou muito feliz de ter sido parte disso...

782
01:03:20,790 --> 01:03:25,790
Pelo causa do impacto causado...

783
01:03:25,790 --> 01:03:30,790
...

784
01:03:30,790 --> 01:03:35,790
... (CLAP CLAP CLAP)

